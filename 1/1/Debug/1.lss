
1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000003a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000d0  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  000000d0  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  000000ff  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000010d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006bb  00000000  00000000  0000012d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000499  00000000  00000000  000007e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000019e  00000000  00000000  00000c81  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000e20  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000017a  00000000  00000000  00000e44  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00000fbe  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000002  00000052  00000052  000000c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000fd0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.main    0000000a  00000048  00000048  000000bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.__dummy_fini 00000002  00000054  00000054  000000c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__dummy_funcs_on_exit 00000002  00000056  00000056  000000ca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.__dummy_simulator_exit 00000002  00000058  00000058  000000cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.exit    0000000e  0000003a  0000003a  000000ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text._Exit   00000002  0000005a  0000005a  000000ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	27 c0       	rjmp	.+78     	; 0x52 <__bad_interrupt>
   4:	26 c0       	rjmp	.+76     	; 0x52 <__bad_interrupt>
   6:	25 c0       	rjmp	.+74     	; 0x52 <__bad_interrupt>
   8:	24 c0       	rjmp	.+72     	; 0x52 <__bad_interrupt>
   a:	23 c0       	rjmp	.+70     	; 0x52 <__bad_interrupt>
   c:	22 c0       	rjmp	.+68     	; 0x52 <__bad_interrupt>
   e:	21 c0       	rjmp	.+66     	; 0x52 <__bad_interrupt>
  10:	20 c0       	rjmp	.+64     	; 0x52 <__bad_interrupt>
  12:	1f c0       	rjmp	.+62     	; 0x52 <__bad_interrupt>
  14:	1e c0       	rjmp	.+60     	; 0x52 <__bad_interrupt>
  16:	1d c0       	rjmp	.+58     	; 0x52 <__bad_interrupt>
  18:	1c c0       	rjmp	.+56     	; 0x52 <__bad_interrupt>
  1a:	1b c0       	rjmp	.+54     	; 0x52 <__bad_interrupt>
  1c:	1a c0       	rjmp	.+52     	; 0x52 <__bad_interrupt>
  1e:	19 c0       	rjmp	.+50     	; 0x52 <__bad_interrupt>
  20:	18 c0       	rjmp	.+48     	; 0x52 <__bad_interrupt>
  22:	17 c0       	rjmp	.+46     	; 0x52 <__bad_interrupt>
  24:	16 c0       	rjmp	.+44     	; 0x52 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	0a d0       	rcall	.+20     	; 0x48 <main>
  34:	02 c0       	rjmp	.+4      	; 0x3a <_etext>

00000036 <_exit>:
  36:	f8 94       	cli

00000038 <__stop_program>:
  38:	ff cf       	rjmp	.-2      	; 0x38 <__stop_program>

Disassembly of section .text:

00000052 <__bad_interrupt>:
  52:	d6 cf       	rjmp	.-84     	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

00000048 <main>:
#include <xc.h>

int main(void)
{
	
	DDRC = 0b0000001;
  48:	81 e0       	ldi	r24, 0x01	; 1
  4a:	84 bb       	out	0x14, r24	; 20
	
    while(1)
    {
        PORTC = 0b0000001;
  4c:	81 e0       	ldi	r24, 0x01	; 1
  4e:	85 bb       	out	0x15, r24	; 21
  50:	fd cf       	rjmp	.-6      	; 0x4c <main+0x4>

Disassembly of section .text.__dummy_fini:

00000054 <_fini>:
  54:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000056 <__funcs_on_exit>:
  56:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000058 <__simulator_exit>:
  58:	08 95       	ret

Disassembly of section .text.exit:

0000003a <exit>:
  3a:	ec 01       	movw	r28, r24
  3c:	0c d0       	rcall	.+24     	; 0x56 <__funcs_on_exit>
  3e:	0a d0       	rcall	.+20     	; 0x54 <_fini>
  40:	ce 01       	movw	r24, r28
  42:	0a d0       	rcall	.+20     	; 0x58 <__simulator_exit>
  44:	ce 01       	movw	r24, r28
  46:	09 d0       	rcall	.+18     	; 0x5a <_Exit>

Disassembly of section .text._Exit:

0000005a <_Exit>:
  5a:	ed df       	rcall	.-38     	; 0x36 <_exit>
